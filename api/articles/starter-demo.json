{"title":"封装一个自己的 redis-starter","uid":"15f05080c5d9982936ed8c1ae1c1de24","slug":"starter-demo","date":"2021-08-10T07:04:34.000Z","updated":"2021-08-10T08:33:39.802Z","comments":true,"path":"api/articles/starter-demo.json","keywords":null,"cover":"https://markcwg-blog.oss-cn-chengdu.aliyuncs.com/uPic/starter-icon.jpeg","content":"<h1 id=\"0-写在前面\"><a href=\"#0-写在前面\" class=\"headerlink\" title=\"0 写在前面\"></a>0 写在前面</h1><p>SpringBoot 中有一个非常重要的机制——starter，它是遵循“约定大于配置”理念的一个重要表现。能够将功能集成进 starter 中，无需繁杂的配置（可以认为特指一大堆 xml 文件）即可在 maven 项目中引入并使用。日常开发中，经常会遇到一些独立于业务之外的通用模块（例如日志处理、redis 工具等），秉承着不重复造轮子的理念，我们可以考虑将类似的模块封装成一个 starter，按需引入，利用 SpringBoot 的自动装配将 Bean 注册进 IOC 容器中。</p>\n<h1 id=\"1-前置知识\"><a href=\"#1-前置知识\" class=\"headerlink\" title=\"1 前置知识\"></a>1 前置知识</h1><p>封装一个 starter 并不适合零基础的小白。在了解如何封装一个 starter 之前，至少需要了解的前置知识如下：</p>\n<ol>\n<li>SpringBoot 的基础使用（如创建项目、编写配置文件以及配置类等）</li>\n<li>如果能了解SpringBoot 的自动装配原理更好，不了解也没关系，不影响本 demo 的学习</li>\n<li>了解Redis 的基础使用（其实这个也不强求，只是因为本 demo 选择做的是一个 redis 的工具类一样的 starter，所以最好还是有一点基础）</li>\n<li>maven 的基础知识，至少要了解本地仓库跟远程仓库这些概念。</li>\n<li>了解自定义注解</li>\n<li>已安装 redis</li>\n</ol>\n<h1 id=\"2-开始编写-starter\"><a href=\"#2-开始编写-starter\" class=\"headerlink\" title=\"2 开始编写 starter\"></a>2 开始编写 starter</h1><ol>\n<li><p>创建一个maven 项目</p>\n<p><img src=\"https://markcwg-blog.oss-cn-chengdu.aliyuncs.com/uPic/image-20210810152751530.png\" alt=\"image-20210810152751530\"></p>\n</li>\n<li><p>引入 springboot 父依赖</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;&#x2F;artifactId&gt;\n        &lt;version&gt;2.5.3&lt;&#x2F;version&gt;\n        &lt;relativePath&#x2F;&gt;\n&lt;&#x2F;parent&gt;</code></pre></li>\n<li><p>引入 redis 相关依赖</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;properties&gt;\n        &lt;maven.compiler.source&gt;8&lt;&#x2F;maven.compiler.source&gt;\n        &lt;maven.compiler.target&gt;8&lt;&#x2F;maven.compiler.target&gt;\n        &lt;spring.boot.version&gt;2.5.3&lt;&#x2F;spring.boot.version&gt;\n&lt;&#x2F;properties&gt;\n\n&lt;dependencies&gt;\n        &lt;!-- 添加 redis 依赖 --&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-data-redis&lt;&#x2F;artifactId&gt;\n            &lt;version&gt;$&#123;spring.boot.version&#125;&lt;&#x2F;version&gt;\n        &lt;&#x2F;dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.data&lt;&#x2F;groupId&gt;\n            &lt;artifactId&gt;spring-data-redis&lt;&#x2F;artifactId&gt;\n            &lt;version&gt;$&#123;spring.boot.version&#125;&lt;&#x2F;version&gt;\n        &lt;&#x2F;dependency&gt;\n&lt;&#x2F;dependencies&gt;</code></pre></li>\n<li><p>创建基础包结构  </p>\n<ul>\n<li><img src=\"https://markcwg-blog.oss-cn-chengdu.aliyuncs.com/uPic/image-20210810153807752.png\" alt=\"image-20210810153807752\"></li>\n</ul>\n</li>\n<li><p>在 config 包下创建 RedisTemplateConfig 类</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.study.redis.config;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.data.redis.connection.RedisConnectionFactory;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer;\nimport org.springframework.data.redis.serializer.StringRedisSerializer;\n\n&#x2F;**\n * @author markcwg\n * @date 2021&#x2F;8&#x2F;10 3:48 下午\n *&#x2F;\n@Configuration\npublic class RedisTemplateConfig &#123;\n\n    @Bean\n    public RedisTemplate&lt;String, String&gt; redisTemplate(RedisConnectionFactory redisConnectionFactory) &#123;\n        RedisTemplate&lt;String, String&gt; redisTemplate &#x3D; new RedisTemplate&lt;&gt;();\n        redisTemplate.setConnectionFactory(redisConnectionFactory);\n        &#x2F;&#x2F;定义key序列化方式\n        redisTemplate.setKeySerializer(new StringRedisSerializer());\n        &#x2F;&#x2F;定义value序列化方式\n        redisTemplate.setValueSerializer(new GenericJackson2JsonRedisSerializer());\n        return redisTemplate;\n    &#125;\n&#125;</code></pre></li>\n<li><p>在 helper 包下创建 RedisHelper 类</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.study.redis.helper;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.stereotype.Component;\n\nimport java.util.Set;\n\n&#x2F;**\n * @author markcwg\n * @date 2021&#x2F;8&#x2F;10 3:53 下午\n *&#x2F;\n@Component\npublic class RedisHelper &#123;\n    @Autowired\n    private RedisTemplate&lt;String, String&gt; redisTemplate;\n\n    &#x2F;**\n     * 是否存在key\n     *\n     * @param key 键\n     * @return 是否存在\n     *&#x2F;\n    public Boolean hasKey(String key) &#123;\n        return redisTemplate.hasKey(key);\n    &#125;\n\n    &#x2F;**\n     * 查找匹配的key\n     *\n     * @param pattern 匹配表达式\n     * @return 所有匹配的数据\n     *&#x2F;\n    public Set&lt;String&gt; keys(String pattern) &#123;\n        return redisTemplate.keys(pattern);\n    &#125;\n\n    &#x2F;**\n     * 设置指定 key 的值\n     * @param key 键\n     * @param value 值\n     *&#x2F;\n    public void set(String key, String value) &#123;\n        redisTemplate.opsForValue().set(key, value);\n    &#125;\n\n    &#x2F;**\n     * 获取指定 key 的值\n     * @param key 键\n     * @return 值\n     *&#x2F;\n    public String get(String key) &#123;\n        return redisTemplate.opsForValue().get(key);\n    &#125;\n\n&#125;\n</code></pre></li>\n<li><p>在 config 包下创建 CustomRedisAutoConfiguration</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.study.redis.config;\n\nimport com.study.redis.helper.RedisHelper;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\n\n&#x2F;**\n * @author markcwg\n * @date 2021&#x2F;7&#x2F;30 4:10 下午\n *&#x2F;\n@ConditionalOnWebApplication\n@Configuration(proxyBeanMethods &#x3D; false)\n@ComponentScan(basePackages &#x3D; &quot;com.study.redis.config&quot;)\npublic class CustomRedisAutoConfiguration &#123;\n    @Bean\n    public RedisHelper redisHelper() &#123;\n        return new RedisHelper();\n    &#125;\n&#125;</code></pre></li>\n<li><p>在 annotations 包下创建 LoadRedis 注解</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.study.redis.annotations;\n\nimport com.study.redis.config.CustomRedisAutoConfiguration;\nimport org.springframework.context.annotation.Import;\n\nimport java.lang.annotation.*;\n\n&#x2F;**\n * @author markcwg\n * @date 2021&#x2F;8&#x2F;10 4:00 下午\n *&#x2F;\n@Target(ElementType.TYPE)\n@Documented\n@Retention(RetentionPolicy.RUNTIME)\n@Import(CustomRedisAutoConfiguration.class)\npublic @interface LoadRedis &#123;\n&#125;</code></pre></li>\n<li><p>使用 mvn install 将 starter 放入自己的 maven 仓库</p>\n<p><img src=\"https://markcwg-blog.oss-cn-chengdu.aliyuncs.com/uPic/image-20210810160609905.png\" alt=\"image-20210810160609905\"></p>\n</li>\n<li><p>判断 maven 本地仓库是否已存在成品(此步可忽略)</p>\n<p><img src=\"https://markcwg-blog.oss-cn-chengdu.aliyuncs.com/uPic/image-20210810160805940.png\" alt=\"image-20210810160805940\"></p>\n</li>\n</ol>\n<h1 id=\"3-原理解释\"><a href=\"#3-原理解释\" class=\"headerlink\" title=\"3 原理解释\"></a>3 原理解释</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>此处简单解释一下此 starter 的原理：通过 LoadRedis 注解引入 CustomRedisAutoConfiguration 自动配置类，在这个类中将 RedisHelper 注册进 IOC 容器，而 RedisHelper 里封装了常用的 redis 方法，可自行扩展</p></blockquote>\n<h1 id=\"4-使用自定义的-starter\"><a href=\"#4-使用自定义的-starter\" class=\"headerlink\" title=\"4 使用自定义的 starter\"></a>4 使用自定义的 starter</h1><ol>\n<li><p>创建一个新的springboot 项目</p>\n<p><img src=\"https://markcwg-blog.oss-cn-chengdu.aliyuncs.com/uPic/image-20210810161013780.png\" alt=\"image-20210810161013780\"></p>\n</li>\n<li><p>引入自定义的 starter</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">&lt;dependency&gt;\n            &lt;groupId&gt;com.study&lt;&#x2F;groupId&gt;\n            &lt;artifactId&gt;starter-demo&lt;&#x2F;artifactId&gt;\n            &lt;version&gt;0.1&lt;&#x2F;version&gt;\n&lt;&#x2F;dependency&gt;</code></pre></li>\n<li><p>编写配置文件(此步要求已安装 redis)</p>\n<pre class=\"line-numbers language-yml\" data-language=\"yml\"><code class=\"language-yml\">server:\n  port: 8082\n\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379</code></pre></li>\n<li><p>在启动类上加上 LoadRedis 注解</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@SpringBootApplication\n@LoadRedis\npublic class StarterTestDemoApplication &#123;\n\n    public static void main(String[] args) &#123;\n        SpringApplication.run(StarterTestDemoApplication.class, args);\n    &#125;\n\n&#125;</code></pre></li>\n<li><p>创建一个 RedisController 类用作测试</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>由于只用作测试，此处直接在 Controller 里直接写业务逻辑</p></blockquote>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.example.startertestdemo.com.study;\n\nimport com.study.redis.helper.RedisHelper;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n&#x2F;**\n * @author markcwg\n * @date 2021&#x2F;8&#x2F;10 4:19 下午\n *&#x2F;\n@RestController\n@RequestMapping(&quot;redis&quot;)\npublic class RedisController &#123;\n\n    private RedisHelper redisHelper;\n    @Autowired\n    public RedisController(RedisHelper redisHelper) &#123;\n        this.redisHelper &#x3D; redisHelper;\n    &#125;\n\n    @PostMapping\n    public String save(String key, String value) &#123;\n        redisHelper.set(key, value);\n        return &quot;success&quot;;\n    &#125;\n\n    @GetMapping\n    public String get(String key) &#123;\n        return redisHelper.get(key);\n    &#125;\n&#125;\n</code></pre></li>\n<li><p>使用 postman 测试向 redis 中发送数据</p>\n<p><img src=\"https://markcwg-blog.oss-cn-chengdu.aliyuncs.com/uPic/image-20210810162758258.png\" alt=\"image-20210810162758258\"></p>\n</li>\n<li><p>使用 postman 测试从 redis 中获取数据</p>\n<p><img src=\"https://markcwg-blog.oss-cn-chengdu.aliyuncs.com/uPic/image-20210810162842918.png\" alt=\"image-20210810162842918\"></p>\n</li>\n</ol>\n<h1 id=\"5-完结，撒花！\"><a href=\"#5-完结，撒花！\" class=\"headerlink\" title=\"5 完结，撒花！\"></a>5 完结，撒花！</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>保持学习，保持热爱！</p></blockquote>\n","text":"0 写在前面SpringBoot 中有一个非常重要的机制——starter，它是遵循“约定大于配置”理念的一个重要表现。能够将功能集成进 starter 中，无需繁杂的配置（可以认为特指一大堆 xml 文件）即可在 maven 项目中引入并使用。日常开发中，经常会遇到一些独立于业...","link":"","photos":[],"count_time":{"symbolsCount":"7.4k","symbolsTime":"7 mins."},"categories":[{"name":"技术分享","slug":"技术分享","count":1,"path":"api/categories/技术分享.json"}],"tags":[{"name":"SpringBoot","slug":"SpringBoot","count":1,"path":"api/tags/SpringBoot.json"},{"name":"Redis","slug":"Redis","count":1,"path":"api/tags/Redis.json"},{"name":"注解","slug":"注解","count":1,"path":"api/tags/注解.json"},{"name":"AOP","slug":"AOP","count":1,"path":"api/tags/AOP.json"},{"name":"Aspect","slug":"Aspect","count":1,"path":"api/tags/Aspect.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#0-%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2\"><span class=\"toc-text\">0 写在前面</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">1 前置知识</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E5%BC%80%E5%A7%8B%E7%BC%96%E5%86%99-starter\"><span class=\"toc-text\">2 开始编写 starter</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-%E5%8E%9F%E7%90%86%E8%A7%A3%E9%87%8A\"><span class=\"toc-text\">3 原理解释</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%84-starter\"><span class=\"toc-text\">4 使用自定义的 starter</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5-%E5%AE%8C%E7%BB%93%EF%BC%8C%E6%92%92%E8%8A%B1%EF%BC%81\"><span class=\"toc-text\">5 完结，撒花！</span></a></li></ol>","author":{"name":"Markcwg","slug":"blog-author","avatar":"https://i.picsum.photos/id/1006/3000/2000.jpg?hmac=x83pQQ7LW1UTo8HxBcIWuRIVeN_uCg0cG6keXvNvM8g","link":"/","description":"多年以来，她一直在一处山中修道幽居，不来见我。何处山头？在我心中而已","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Docker学习笔记","uid":"0a3a9562fcdec8d119937b1919ce2fb3","slug":"docker笔记","date":"2021-05-27T02:32:36.000Z","updated":"2021-08-07T02:57:39.411Z","comments":true,"path":"api/articles/docker笔记.json","keywords":null,"cover":"https://markcwg-blog.oss-cn-chengdu.aliyuncs.com/uPic/u32351954403408778472fm26gp0ed2f94e232d81451.md.jpg","text":"零 特别说明 本文是学习B站狂神说java的课程之后，整理而出 对原课程感兴趣的小伙伴，可以点击传送门 一 Docker概述1 Docker简介Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的 Linux或Wi...","link":"","photos":[],"count_time":{"symbolsCount":"35k","symbolsTime":"32 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":4,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"Docker","slug":"Docker","count":1,"path":"api/tags/Docker.json"},{"name":"DevOps","slug":"DevOps","count":1,"path":"api/tags/DevOps.json"},{"name":"容器化技术","slug":"容器化技术","count":1,"path":"api/tags/容器化技术.json"},{"name":"自动部署","slug":"自动部署","count":1,"path":"api/tags/自动部署.json"}],"author":{"name":"Markcwg","slug":"blog-author","avatar":"https://i.picsum.photos/id/1006/3000/2000.jpg?hmac=x83pQQ7LW1UTo8HxBcIWuRIVeN_uCg0cG6keXvNvM8g","link":"/","description":"多年以来，她一直在一处山中修道幽居，不来见我。何处山头？在我心中而已","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true,"pinned":true},"next_post":{"title":"FastDFS 搭建笔记","uid":"9fb587e25ed7cfd4953027b4989f29b2","slug":"fastfs","date":"2021-08-06T02:44:12.000Z","updated":"2021-08-07T08:04:31.218Z","comments":true,"path":"api/articles/fastfs.json","keywords":null,"cover":"https://markcwg-blog.oss-cn-chengdu.aliyuncs.com/uPic/fastdfs.jpeg","text":"1 安装 Tracker 注：在编辑配置文件的过程中，ip 需写服务器外网 ip，亲测写 127.0.0.1 会报错 #一个环境 yum install gcc-c++ #两个库，第一个 libevent yum -y install libevent # 安装第二个库 libf...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":4,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"分布式文件系统","slug":"分布式文件系统","count":1,"path":"api/tags/分布式文件系统.json"},{"name":"FastDFS","slug":"FastDFS","count":1,"path":"api/tags/FastDFS.json"},{"name":"linux","slug":"linux","count":1,"path":"api/tags/linux.json"}],"author":{"name":"Markcwg","slug":"blog-author","avatar":"https://i.picsum.photos/id/1006/3000/2000.jpg?hmac=x83pQQ7LW1UTo8HxBcIWuRIVeN_uCg0cG6keXvNvM8g","link":"/","description":"多年以来，她一直在一处山中修道幽居，不来见我。何处山头？在我心中而已","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}